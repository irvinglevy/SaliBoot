/*
 * Def.h
 *
 *  Created on: Mar 8, 2016
 *      Author: Irving
 */
#include "driverlib.h"
#ifndef DEF_H_
#define DEF_H_
#ifdef BT_TEST
#define BNRG_SPI_RESET_PORT     GPIO_PORT_P1
#define BNRG_SPI_RESET_PIN      GPIO_PIN3
#define BNRG_SPI_CS_PORT        GPIO_PORT_P1
#define BNRG_SPI_CS_PIN         GPIO_PIN5
#define BNRG_SPI_INT_PORT       GPIO_PORT_P1
#define BNRG_SPI_INT_PIN        GPIO_PIN4
#define BNRG_SPI_MOSI_Port      GPIO_PORT_P1
#define BNRG_SPI_MOSI_PIN       GPIO_PIN6
#define BNRG_SPI_MISO_Port      GPIO_PORT_P1
#define BNRG_SPI_MISO_PIN       GPIO_PIN7
#define BNRG_SPI_CLOCK_PORT     GPIO_PORT_P2
#define BNRG_SPI_CLOCK_PIN      GPIO_PIN2
#define BNRG_GREEN_PORT     GPIO_PORT_P3
#define BNRG_GREEN_PIN      GPIO_PIN0

#else
#define BNRG_SPI_RESET_PORT		GPIO_PORT_P3
#define BNRG_SPI_RESET_PIN		GPIO_PIN3
#define BNRG_SPI_CS_PORT 		GPIO_PORT_P3
#define BNRG_SPI_CS_PIN			GPIO_PIN2
#define BNRG_SPI_INT_PORT		GPIO_PORT_P1
#define BNRG_SPI_INT_PIN		GPIO_PIN6
#define BNRG_SPI_MOSI_Port      GPIO_PORT_P2
#define BNRG_SPI_MOSI_PIN       GPIO_PIN3
#define BNRG_SPI_MISO_Port      GPIO_PORT_P2
#define BNRG_SPI_MISO_PIN       GPIO_PIN2
#endif
#ifdef BRG_HARDWARE
#define BNRG_SPI_CLOCK_PORT     GPIO_PORT_P2
#define BNRG_SPI_CLOCK_PIN      GPIO_PIN5
#else
#define BNRG_SPI_CLOCK_PORT     GPIO_PORT_P2
#define BNRG_SPI_CLOCK_PIN      GPIO_PIN5
#endif

#define BNRG_GREEN_PORT     GPIO_PORT_P5
#define BNRG_GREEN_PIN      GPIO_PIN0
#define ORANGE_PORT         GPIO_PORT_P6
#define ORANGE_PIN          GPIO_PIN0
#define POWER_PORT          GPIO_PORT_P6
#define POWER_GOOD_PIN      GPIO_PIN6
#define POWER_CHARGE_PIN    GPIO_PIN7
#define spo2_SPI_INT_PORT        GPIO_PORT_P2
#define spo2_SPI_INT_PIN         GPIO_PIN7
#define spo2_SPI_CS_PORT        GPIO_PORT_P3
#define spo2_SPI_CS_PIN         GPIO_PIN7
#define spo2_POWER_DOWN_PORT    GPIO_PORT_P3
#define spo2_POWER_DOWN_PIN     GPIO_PIN4
#define spo2_SPI_DIAG_PORT      GPIO_PORT_P2
#define spo2_SPI_DIAG_PIN       GPIO_PIN6
#define spo2_SPI_PD_ALM_PORT   GPIO_PORT_P3
#define spo2_SPI_PD_ALM_PIN    GPIO_PIN6
#define spo2_SPI_RESET_PORT   GPIO_PORT_P3  //SHARED WITH bt MODULE
#define spo2_SPI_RESET_PIN    GPIO_PIN6


#define TP14_PORT   GPIO_PORT_P2  //SHARED WITH bt MODULE
#define TP14_PIN    GPIO_PIN1


#ifdef SPO2_HARDWARE
#define spo2_SPI_CLOCK_PORT     GPIO_PORT_P2
#define spo2_SPI_CLOCK_PIN      GPIO_PIN4
#define spo2_SPI_LED_ALM_PORT   GPIO_PORT_P3
#define spo2_SPI_LED_ALM_PIN    GPIO_PIN5
#define spo2_SPI_MOSI_PORT       GPIO_PORT_P1
#define spo2_SPI_MOSI_PIN        GPIO_PIN4
#define spo2_SPI_MISO_PORT       GPIO_PORT_P1
#define spo2_SPI_MISO_PIN        GPIO_PIN5
#else
#define spo2_SPI_CLOCK_PORT      GPIO_PORT_P2
#define spo2_SPI_CLOCK_PIN       GPIO_PIN4

#define spo2_SPI_MOSI_PORT       GPIO_PORT_P1
#define spo2_SPI_MOSI_PIN        GPIO_PIN4
#define spo2_SPI_MISO_PORT       GPIO_PORT_P1
#define spo2_SPI_MISO_PIN        GPIO_PIN5
#endif

#define SHUTDOWN_PORT           GPIO_PORT_P4
#define SHUTDOWN_PIN            GPIO_PIN0
#define BDADDR_SIZE 6
#define EUSCI_BASE_BNRG  EUSCI_A2_BASE
#define EUSCI_BASE_spo2   EUSCI_A1_BASE
#define MS_CLOCK 8000000		//8MHZ
#define MS_2 MS_CLOCK/300

#define BLE_READ_SIZE 80
#define BUFFER_LENGTH 128
#define spo2_PACKET_SIZE 20
#define SPO2_QUEUE_SIZE 6
#define RESP_PACKET_SIZE 20
#define RESP_PROTOCOL 0x80
#define spo2_PROTOCOL 0x00
#define byte uint8_t


//int16_t interval_min,
 //                            uint16_t interval_max, uint16_t slave_latency,
 //                            uint16_t timeout_multiplier

#define INTERVAL_MIN    10
#define INTERVAL_MAX    500     //20
#define SLAVE_LATENCY   50     //10
#define TIMEOUT_MULTIPLIER  100

#define POWER_ON_PORT       GPIO_PORT_P1
#define POWER_ON_PIN        GPIO_PIN0
/* HCI Packet types
#define HCI_COMMAND_PKT		0x01
#define HCI_ACLDATA_PKT		0x02
#define HCI_SCODATA_PKT		0x03
#define HCI_EVENT_PKT		0x04
#define HCI_VENDOR_PKT		0xff


typedef  struct _read_local_version_rp{
  uint8_t  status;
  uint8_t  hci_version;
  uint16_t hci_revision;
  uint8_t  lmp_pal_version;
  uint16_t manufacturer_name;
  uint16_t lmp_pal_subversion;
}  read_local_version_rp;

#define READ_LOCAL_VERSION_RP_SIZE      9
*/
#define VARIABLE_SIZE 0
#define FALSE 0
#define TRUE 1
#define MIN(a,b)            ((a) < (b) )? (a) : (b)

#define ADC_DATA     0x00
#define ADC_WAKEUP   0x02
#define ADC_STANDBY  0x04
#define ADC_RESET    0x06
#define ADC_START    0x08
#define ADC_STOP     0x0A
#define ADC_RDATAC   0x10
#define ADC_SDATAC   0x11
#define ADC_RDATA    0x12
#define ADC_CONFIG1  0X86
#define ADC_CONFIG2  0X86
#define ADC_CONFIG3  0X86
#define ADC_READ     0x20
#define ZINC_AIR_REF 573
#define count 60

#define CLK_DIVIDE 5000  //8 MHZ DIVIDED BY 64 is 125,000 divided by 5000 is 25 Hz.


#define VERSION 0x02
#endif /* DEF_H_ */
